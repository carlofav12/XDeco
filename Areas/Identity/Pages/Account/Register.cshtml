@page
@model RegisterModel

@{
    ViewData["Title"] = "Registro";
}

<style>
    /* Aplica un borde marrón cuando el campo está en foco */
    .form-control:focus {
        border-color: #8B4513;
        /* Marrón */
        box-shadow: 0 0 0 0.2rem rgba(139, 69, 19, 0.25);
    }

    /* Color de fondo para los campos de entrada */
    .form-control {
        background-color: #fff1e6;
    }

    /* Estilos para el botón */
    #registerSubmit {
        background-color: #2b1f16;
        color: white;
        border: none;
        transition: background-color 0.3s ease, transform 0.3s ease;
    }

    #registerSubmit:hover {
        background-color: #502405;
        transform: translateY(-2px);
    }

    #registerSubmit:active {
        transform: translateY(0);
    }

    /* Animación para la imagen al pasar el cursor */
    .img-hover {
        transition: transform 0.3s ease;
    }

    .img-hover:hover {
        transform: scale(1.05);
    }
</style>

<h1>@ViewData["Registro"]</h1>

<div class="row">
    <!-- Columna del formulario -->
    <div class="col-md-6 d-flex justify-content-center align-items-center" style="padding: 20px;">
        <form id="registerForm" asp-route-returnUrl="@Model.ReturnUrl" method="post"
            style="width: 100%; max-width: 400px;">
            <div class="col-md-12">
                <h2 class="title-XDECO">Bienvenido a XDeco.</h2>
            </div>
            <hr />
            <div asp-validation-summary="ModelOnly" class="text-danger" role="alert"></div>
            <div class="form-floating mb-3">
                <input asp-for="Input.Nombres" class="form-control" aria-required="true" placeholder="Nombre" />
                <label asp-for="Input.Nombres">Nombre</label>
                <span asp-validation-for="Input.Nombres" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="Input.ApellidoPaterno" class="form-control" aria-required="true"
                    placeholder="Apellido Paterno" />
                <label asp-for="Input.ApellidoPaterno">Apellido Paterno</label>
                <span asp-validation-for="Input.ApellidoPaterno" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="Input.ApellidoMaterno" class="form-control" aria-required="true"
                    placeholder="Apellido Materno" />
                <label asp-for="Input.ApellidoMaterno">Apellido Materno</label>
                <span asp-validation-for="Input.ApellidoMaterno" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="Input.Email" class="form-control" autocomplete="username" aria-required="true"
                    placeholder="name@example.com" onblur="validateEmail()" />
                <label asp-for="Input.Email">Correo</label>
                <span asp-validation-for="Input.Email" class="text-danger"></span>
                <div id="emailValidationMessage" class="text-danger"></div>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="Input.PhoneNumber" class="form-control" autocomplete="tel" aria-required="true"
                    placeholder="Número de Teléfono" />
                <label asp-for="Input.PhoneNumber">Número de Teléfono</label>
                <span asp-validation-for="Input.PhoneNumber" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="Input.Password" class="form-control" autocomplete="new-password" aria-required="true"
                    placeholder="Contraseña" />
                <label asp-for="Input.Password">Contraseña</label>
                <span asp-validation-for="Input.Password" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="Input.ConfirmPassword" class="form-control" autocomplete="new-password"
                    aria-required="true" placeholder="Confirmar Contraseña" />
                <label asp-for="Input.ConfirmPassword">Confirmar Contraseña</label>
                <span asp-validation-for="Input.ConfirmPassword" class="text-danger"></span>
            </div>
            <div class="form-check mt-3">
                <input id="notifNewsletter" type="checkbox" class="form-check-input">
                <label for="notifNewsletter" class="form-check-label">¿Usted desea qué XDeco envíe información sobre
                    eventos y/o promociones que ofrece?</label>
            </div>
            <button id="registerSubmit" type="submit" class="btn btn-lg btn-primary w-100" disabled>Registrar</button>
        </form>

    </div>

    <!-- Columna de la imagen -->
    <div class="col-md-6 d-flex align-items-stretch">
        <img src="https://firebasestorage.googleapis.com/v0/b/xdeco-dc64f.appspot.com/o/Registro%2FXDECO1-Registro.jpg?alt=media&token=a157ae8a-60dc-429b-9aa5-2f69de0f6a24"
            alt="Imagen de registro" class="img-fluid img-hover" style="object-fit: cover; height: 100%;" />
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        let isEmailValid = false;

        function validateEmail() {
            var email = $('input[name="Input.Email"]').val();
            var apiKey = 'b08f5ded6c28b28852bd2d206c431561a4ed5d6a';

            if (email) {
                $.ajax({
                    url: 'https://api.hunter.io/v2/email-verifier',
                    type: 'GET',
                    data: {
                        email: email,
                        api_key: apiKey
                    },
                    success: function (response) {
                        if (response.data.result === 'undeliverable') {
                            $('#emailValidationMessage').text('El correo no es válido.').removeClass('text-success').addClass('text-danger');
                            isEmailValid = false; // Actualizar estado a inválido
                        } else if (response.data.result === 'deliverable') {
                            $('#emailValidationMessage').text('El correo es válido.').removeClass('text-danger').addClass('text-success');
                            isEmailValid = true; // Actualizar estado a válido
                        } else {
                            $('#emailValidationMessage').text('El estado del correo es incierto.').removeClass('text-success').addClass('text-danger');
                            isEmailValid = false; // Estado incierto
                        }
                        toggleSubmitButton(); // Llamar a la función para habilitar/deshabilitar el botón
                    },
                    error: function () {
                        $('#emailValidationMessage').text('Error al validar el correo.').removeClass('text-success').addClass('text-danger');
                        isEmailValid = false; // Estado inválido en caso de error
                        toggleSubmitButton(); // Llamar a la función para habilitar/deshabilitar el botón
                    }
                });
            } else {
                $('#emailValidationMessage').text('Por favor, ingrese un correo electrónico.').removeClass('text-success').addClass('text-danger');
                isEmailValid = false; // Sin correo, estado inválido
                toggleSubmitButton(); // Llamar a la función para habilitar/deshabilitar el botón
            }
        }

        function toggleSubmitButton() {
            $('#registerSubmit').prop('disabled', !isEmailValid); // Habilitar o deshabilitar el botón según el estado
        }
    </script>
}